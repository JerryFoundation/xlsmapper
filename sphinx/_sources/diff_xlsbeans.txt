======================================
XLSBeansとの違い
======================================

XlsMapperは、XLSBeans ver.1.1 のソースを元に開発を行っています。

そのため、仕様、特にアノテーションの使い方はXLSBeansと共通しています。
XLSBeansとの違いを以下に示します。

--------------------------------------------------------
改善機能
--------------------------------------------------------

* アノテーションの名称を"@Xls～"として、他のライブラリのアノテーションと区別がつきやすいようにしています。

    * セルの座標を指定する属性addressが使用できます。

* エラーメッセージの内容を詳細に表示し、設定間違いの対応をしやすくしています。

* Generics対応として、``@XlsMapColums、@XlsIterateTables`` にも対応しており、マッピング先のClassを指定する必要がありません。

* シートの座標位置の取得が、@XlsMapColumnを付与したフィールドにも対応しています。

* アノテーションを付与するフィールドの修飾子として、public以外のprivate/protectedにも対応しています。


--------------------------------------------------------
追加機能
--------------------------------------------------------

* 書き込み機能があります。
  
    * ``@XlsHorizontalRecords/@XlsVerticalRecords`` に書き込み用の属性を追加し、行が余ったときや足りないときの動作をカスタマイズできます。
                
* 読み込み時、書き込み時のコールバック用メソッドを定義するためのアノテーション``@XlsPreLoad/@XlsPostLoad/@XlsPreSave/@XlsPostLoad`` が使用できます。
  
* 型変換機能として、専用のアノテーションを利用して各フィールドごとに細かく設定できます。

* 読み込んだシートの内容をチェックするValidation機能があります。

    * 独自にValidatorを実装する方式の他、Bean Validation 1.0/1.1に対応しています。

* セルの座標位置のように、マッピング対象の見出し名を取得するこができます。


--------------------------------------------------------
削除機能
--------------------------------------------------------

* コードをシンプルにするため、jExcel API対応を排除し、Apache POIのみに対応しています。
      
* アノテーション``@PostProcessor`` を削除しました。

    * 代わりに、``@XlsPreLoad/@XlsPostLoad/@XlsPreSave/@XlsPostLoad`` が使用できます。
 


